package com.oubaydos.backend.audio;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.spi.DocumentationType;

import org.springframework.context.annotation.Import;
import springfox.documentation.spring.data.rest.configuration.SpringDataRestConfiguration;
import springfox.documentation.swagger2.annotations.EnableSwagger2WebMvc;

import springfox.documentation.spring.web.plugins.Docket;

@Configuration
@RequiredArgsConstructor
@Slf4j
@EnableSwagger2WebMvc
@Import(SpringDataRestConfiguration.class)
public class Config {
    private final TokenRepository tokenRepository;


    @Bean
    CommandLineRunner commandLineRunner() {
        return args -> {
            Token token = new Token("X6dzRsDShdvbWQiWCjaBBpggy5rBDVon", 0);
            Token token2 = new Token("7wul3QGcmqYBn3KcpVrJTsIY4CGt4c5H", 0);
            Token token3 = new Token("q7Vi4CAwQIiriRmxi1oBwJCwsqHUKyXf", 0);

            token = tokenRepository.saveAndFlush(token);
            token2 = tokenRepository.saveAndFlush(token2);
            token3 = tokenRepository.saveAndFlush(token3);

            log.info("id1: {}, id2: {}, id3: {}", token.getId(), token2.getId(), token3.getId());

        };
    }

    @Bean
    public Docket api() {
        return new Docket(DocumentationType.SWAGGER_2)
                .select()
                .apis(RequestHandlerSelectors.any())
                .paths(PathSelectors.any())
                .build();
    }
}
